[DEFAULT]

remote_implementation = fake

# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = True

# Address to bind the API server
bind_host = 0.0.0.0

# Port the bind the API server to
bind_port = 8779

# AMQP Connection info
rabbit_host=127.0.0.1
rabbit_userid=guest
rabbit_password=f7999d1955c5014aa32c

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
sql_connection = sqlite:///reddwarf_test.sqlite
#sql_connection = mysql://root:e1a2c042c828d3566d0a@localhost/reddwarf
#sql_connection = postgresql://reddwarf:reddwarf@localhost/reddwarf

# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
# MySQL uses a default `wait_timeout` of 8 hours, after which it will drop
# idle connections. This can result in 'MySQL Gone Away' exceptions. If you
# notice this, you can lower this value to ensure that SQLAlchemy reconnects
# before MySQL can drop the connection.
sql_idle_timeout = 3600

#DB Api Implementation
db_api_implementation = reddwarf.db.sqlalchemy.api

# Path to the extensions
api_extensions_path = reddwarf/extensions

# Configuration options for talking to nova via the novaclient.
# These options are for an admin user in your keystone config.
# It proxy's the token received from the user to send to nova via this admin users creds,
# basically acting like the client via that proxy token.
reddwarf_proxy_admin_user = admin
reddwarf_proxy_admin_pass = 3de4922d8b6ac5a1aad9
reddwarf_proxy_admin_tenant_name = admin
reddwarf_auth_url = http://0.0.0.0:5000/v2.0

nova_region_name = RegionOne
nova_service_type = compute
nova_service_name = Compute Service

# Config option for showing the IP address that nova doles out
add_addresses = False

# Config options for enabling volume service
reddwarf_volume_support = True
nova_volume_service_type = volume
nova_volume_service_name = Volume Service
device_path = /dev/vdb
mount_point = /var/lib/mysql
max_accepted_volume_size = 25
max_instances_per_user = 55
volume_time_out=30

# Auth
admin_roles = admin

# Users to ignore for user create/list/delete operations
ignore_users = os_admin, root
ignore_dbs = lost+found, mysql, information_schema

# Guest related conf
agent_heartbeat_time = 10
agent_call_low_timeout = 5
agent_call_high_timeout = 100

server_delete_time_out=10
use_nova_server_volume = True

use_decepticon = True

# ============ notifer queue kombu connection options ========================

notifier_queue_hostname = localhost
notifier_queue_userid = guest
notifier_queue_password = guest
notifier_queue_ssl = False
notifier_queue_port = 5672
notifier_queue_virtual_host = /
notifier_queue_transport = memory

[composite:reddwarf]
use = call:reddwarf.common.wsgi:versioned_urlmap
/: versions
/v1.0: reddwarfapi

[app:versions]
paste.app_factory = reddwarf.versions:app_factory

[pipeline:reddwarfapi]
pipeline = faultwrapper tokenauth authorization contextwrapper extensions reddwarfapp
#pipeline = debug extensions reddwarfapp

[filter:extensions]
paste.filter_factory = reddwarf.common.extensions:factory

[filter:tokenauth]
paste.filter_factory = reddwarf.tests.fakes.keystone:filter_factory
service_protocol = http
service_host = 127.0.0.1
service_port = 5000
auth_host = 127.0.0.1
auth_port = 35357
auth_protocol = http
auth_uri = http://127.0.0.1:5000/
admin_token = be19c524ddc92109a224

[filter:authorization]
paste.filter_factory = reddwarf.common.auth:AuthorizationMiddleware.factory

[filter:contextwrapper]
paste.filter_factory = reddwarf.common.wsgi:ContextMiddleware.factory

[filter:faultwrapper]
paste.filter_factory = reddwarf.common.wsgi:FaultWrapper.factory

[app:reddwarfapp]
paste.app_factory = reddwarf.common.api:app_factory

#Add this filter to log request and response for debugging
[filter:debug]
paste.filter_factory = reddwarf.common.wsgi:Debug
